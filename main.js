// Generated by LispyScript v1.0.0
var roleHarvester = require('role.harvester');
var roleUpgrader = require('role.upgrader');
module.exports.loop = function() {
    return (function() {
        (function(___monad) {
            var mBind = ___monad.mBind,
                mResult = ___monad.mResult,
                mZero = ___monad.mZero,
                mPlus = ___monad.mPlus;
            var ____mResult = function(___arg) {
                return (((typeof(___arg) === "undefined") && (!(typeof(mZero) === "undefined"))) ?
                    mZero :
                    mResult(___arg));
            };
            return mBind(Memory.creeps,function(name) {
                return (function() {
                    return ____mResult(((!Game.creeps[name]) ?
                        (function() {
                            return delete(Memory.creeps[name]);
                        })() :
                        undefined));
                })();
            });
        })({
            mBind: function(mv,mf) {
                return ((mv).map(mf)).reduce(function(accum,val) {
                    return accum.concat(val);
                },[]);
            },
            mResult: function(v) {
                return [v];
            },
            mZero: [],
            mPlus: function() {
                return (Array.prototype.slice.call(arguments)).reduce(function(accum,val) {
                    return accum.concat(val);
                },[]);
            }
        });
        var harvesters = _.filter(Game.creeps,function(creep) {
            return ==(creep.memory.role,"harvester");
        });
        console.log(("Harvesters: " + harvesters.length));
        ((harvesters.length < 2) ?
            (function() {
                return (function() {
                    var newName = Game.spawns.Spawn1.createCreep([WORK,CARRY,MOVE],undefined,{role: "harvester"});
                    return console.log(("Spawning new harvester: " + newName));
                })();
            })() :
            undefined);
        return (function(___monad) {
            var mBind = ___monad.mBind,
                mResult = ___monad.mResult,
                mZero = ___monad.mZero,
                mPlus = ___monad.mPlus;
            var ____mResult = function(___arg) {
                return (((typeof(___arg) === "undefined") && (!(typeof(mZero) === "undefined"))) ?
                    mZero :
                    mResult(___arg));
            };
            return mBind(Game.creeps,function(name) {
                return (function() {
                    return ____mResult((function() {
                        var creep = Game.creeps[name];
                        (==(creep.memory.role,"harvester") ?
                            (function() {
                                return roleHarvester.run(creep);
                            })() :
                            undefined);
                        return (==(creep.memory.role,"upgrader") ?
                            (function() {
                                return roleUpgrader.run(creep);
                            })() :
                            undefined);
                    })());
                })();
            });
        })({
            mBind: function(mv,mf) {
                return ((mv).map(mf)).reduce(function(accum,val) {
                    return accum.concat(val);
                },[]);
            },
            mResult: function(v) {
                return [v];
            },
            mZero: [],
            mPlus: function() {
                return (Array.prototype.slice.call(arguments)).reduce(function(accum,val) {
                    return accum.concat(val);
                },[]);
            }
        });
    })();
};
